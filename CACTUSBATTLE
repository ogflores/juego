//CACTUSBATTLE

int screen=0;
int selection=0;
int turn=0;


int[] player1=new int[4];
int[] player2=new int[4];

int[] Cactus1=new int[4];
int[] Cactus2=new int[4];
int[] Cactus3=new int[4];
int[] Cactus4=new int[4];
int[] Cactus5=new int[4];
int[] Cactus6=new int[4];

float punto = 9;
float anguloa;
float angulob;

void  cactus1()
{

 fill(110, 176, 34);
  stroke(0);
  beginShape();
   
   vertex(225,205);
   vertex(225,175);
   vertex(210,175);
   vertex(200,165);
   vertex(200,155);
   vertex(205,150);
   vertex(210,150);
   vertex(215,155);
   vertex(215,160);
   vertex(225,160);
   vertex(225,100);
   vertex(230,95); 
   vertex(230,95);
   vertex(235,100);
   vertex(235,150);
   vertex(245,150);
   vertex(245,140);
   vertex(250,140);
   vertex(255,145);
   vertex(255,150);
   vertex(255,155);
   vertex(250,160);
   vertex(235,160);
   vertex(235,225);
  endShape(CLOSE);
  
  
  
    fill(204, 90, 0);
  stroke(0);
  beginShape();
  
  vertex(220, 225);
  vertex(205, 205);
  vertex(255, 205);
  vertex(240, 225);
  endShape(CLOSE);
  
}


void cactus2()
{


  fill(49, 100, 55);
  stroke(0);
  ellipse(460,180,50,80);
   
  line(460,220,460,140);
  line(450,220,450,143);
  line(440,210,440,155);
  line(470,220,470,143);
  line(480,210,480,155);
  
  
  fill(204, 90, 0);
  stroke(0);
  beginShape();
  
  vertex(450, 225);
  vertex(435, 205);
  vertex(485, 205);
  vertex(470, 225);
  endShape(CLOSE);
}

void cactus3() {

   fill(46, 108, 24);
  ellipse(705, 180, 40, 45);
  fill(59, 152, 25);
  ellipse(685, 180, 50, 65);
  fill(46, 108, 24);
  ellipse(665, 160, 30, 35);
  fill(59, 152, 25);
  ellipse(715, 150, 20, 25);
  
  fill(204, 90, 0);
  stroke(0);
  beginShape();
  
 

  vertex(675, 225);
  vertex(660, 205);
  vertex(710, 205);
  vertex(695, 225);
  
  endShape(CLOSE);
}


void cactus4() {

  fill(43,107,83);
  beginShape();
  vertex(230,655);
  vertex(225,645);
  vertex(230,635);
  vertex(220,620);
  vertex(215,600);
  vertex(220,590);
  vertex(225,600);
  vertex(230,605);
  vertex(240,610);
  vertex(245,615);
  vertex(250,625);
  vertex(245,630);
  vertex(245,635);
  endShape(CLOSE);
  
  fill(204, 90, 0);
  stroke(0);
  beginShape();
  
 

 
  
  vertex(225, 675);
  vertex(210, 655);
  vertex(250, 655);
  vertex(235, 675);
  
  endShape(CLOSE);
}

void cactus5() {


   fill(30,137,119);
  triangle(440,655,435,635,450,655);
  triangle(450,655,455,600,460,655);
  triangle(460,655,475,635,470,655);
  fill(204, 90, 0);
  stroke(0);
  beginShape();

  vertex(450, 675);
  vertex(435, 655);
  vertex(475, 655);
  vertex(460, 675);
  endShape(CLOSE);
}


void cactus6() {

  fill(134,205,53);
  ellipse(680, 630, 50, 65);
  fill(46, 108, 24);
  triangle(675,597,680,567,685,597);
  triangle(655,615,650,590,660,610);
  triangle(701,615,708,590,707,615);
  fill(204, 90, 0);
  stroke(0);
  beginShape();

  vertex(675, 675);
  vertex(660, 655);
  vertex(700, 655);
  vertex(685, 675);
  endShape(CLOSE);
}

void setup()
{


  Cactus1[0]=50;
  Cactus1[1]=30;
  Cactus1[2]=250;
  Cactus1[3]=10;

  Cactus2[0]=30;
  Cactus2[1]=50;
  Cactus2[2]=250;
  Cactus2[3]=20;

  Cactus3[0]=30;
  Cactus3[1]=40;
  Cactus3[2]=250;
  Cactus3[3]=10;

  Cactus4[0]=40;
  Cactus4[1]=30;
  Cactus4[2]=250;
  Cactus4[3]=20;

  Cactus5[0]=30;
  Cactus5[1]=20;
  Cactus5[2]=250;
  Cactus5[3]=10;

  Cactus6[0]=30;
  Cactus6[1]=50;
  Cactus6[2]=250;
  Cactus6[3]=20;

  size(900, 900); 

}

void draw()
{
  


  switch (screen)
  {
  case 0:
    background(255);
     
  
  anguloa = radians(1.5); 
  angulob = radians(50);  

        for(int i=0; i<=450; i+=1.5)
  {
  noStroke();  
   if (i%2==0) 
   {
    fill (#674428);
    rect(i, i, 900-(i*2),900-(i*2));
   }
    else 
    fill (#2B6728);
    rect(i, i, 900-(i*2),900-(i*2));
  }
  
  for(int i=0; i<=450; i+=3)
  {
  noStroke();  
   if (i%2==0) 
   {
    fill (#F0C61D);
    rect(i, i, 900-(i*2),180-(i*2));
   }
    else 
    fill (#F0951D);
    rect(i, i,900-(i*2),180-(i*2));
  }
  
  for(int i=0; i<=900; i+=1.5)
  {
    if (i%2==0)
    {
      fill (#F79257);  
    arc(450,180,450-i,450-i, radians(180), radians(360));
    }
    else
    fill (#F0281D);
    arc(450,180,450-i,450-i, radians(180), radians(360));
  }
    fill(#1D7C20);
  beginShape();
   vertex(440,450);
   vertex(440,420);
   vertex(425,420);
   vertex(415,410);
   vertex(415,400);
   vertex(420,395);
   vertex(425,395);
   vertex(430,400);
   vertex(430,405);
   vertex(440,405);
   vertex(440,345);
   vertex(445,340); 
   vertex(455,340);
   vertex(460,345);
   vertex(460,375);
   vertex(470,375);
   vertex(470,370);
   vertex(475,365);
   vertex(480,365);
   vertex(485,370);
   vertex(485,380);
   vertex(475,390);
   vertex(460,390);
   vertex(460,450);
  
  
  endShape(CLOSE);
  fill(#836E18);
  stroke(0);
  beginShape();
   vertex(0,180);
   vertex(20,160);
   vertex(40,140);
   vertex(45,120);
   vertex(50,110);
   vertex(67,105);
   vertex(72,95);
   vertex(85,90);
   vertex(90,80);
   vertex(95,85);
   vertex(100,95);
   vertex(110,107);
   vertex(115,112);
   vertex(115,120);
   vertex(120,130);
   vertex(140,140);
   vertex(150,155);
   vertex(170,170);
   vertex(175,170);
   vertex(180,180);
   
   
 
 
  
  
  endShape(CLOSE);

fill(#836E18);
stroke(0);
  beginShape();
   vertex(720,180);
   vertex(740,160);
   vertex(760,140);
   vertex(765,120);
   vertex(770,110);
   vertex(787,105);
   vertex(792,95);
   vertex(805,90);
   vertex(810,80);
   vertex(815,85);
   vertex(820,95);
   vertex(830,107);
   vertex(835,112);
   vertex(835,120);
   vertex(840,130);
   vertex(860,140);
   vertex(870,155);
   vertex(890,170);
   vertex(895,170);
   vertex(900,180);
   
   
 
 
  
  
  endShape(CLOSE);
    pushMatrix();
    textSize(20);
    fill(random(100,255));
    text("Press Down Arrow Key to Select a Player", 270, 680);
    textSize(90);
    fill(random(100,255));
    text("CACTUS BATTLE", 100, 600);
    popMatrix();
    
    fill(0);
    noStroke();
    translate(width/2, height/2);
    semilla1(punto, radians(90), 0, 0); 


    break;
  case 1:
    background(155);
        for(int i=0; i<=450; i+=1.5)
  {
  noStroke();  
   if (i%2==0) 
   {
    fill (#674428);
    rect(i, i, 900-(i*2),900-(i*2));
   }
    else 
    fill (#2B6728);
    rect(i, i, 900-(i*2),900-(i*2));
  }
  
  for(int i=0; i<=450; i+=3)
  {
  noStroke();  
   if (i%2==0) 
   {
    fill (#F0C61D);
    rect(i, i, 900-(i*2),180-(i*2));
   }
    else 
    fill (#F0951D);
    rect(i, i,900-(i*2),180-(i*2));
  }
  
  for(int i=0; i<=900; i+=1.5)
  {
    if (i%2==0)
    {
      fill (#F79257);  
    arc(450,180,450-i,450-i, radians(180), radians(360));
    }
    else
    fill (#F0281D);
    arc(450,180,450-i,450-i, radians(180), radians(360));
  }
  fill(#836E18);
  stroke(0);
  beginShape();
   vertex(0,180);
   vertex(20,160);
   vertex(40,140);
   vertex(45,120);
   vertex(50,110);
   vertex(67,105);
   vertex(72,95);
   vertex(85,90);
   vertex(90,80);
   vertex(95,85);
   vertex(100,95);
   vertex(110,107);
   vertex(115,112);
   vertex(115,120);
   vertex(120,130);
   vertex(140,140);
   vertex(150,155);
   vertex(170,170);
   vertex(175,170);
   vertex(180,180);
   
   
 
 
  
  
  endShape(CLOSE);

fill(#836E18);
stroke(0);
  beginShape();
   vertex(720,180);
   vertex(740,160);
   vertex(760,140);
   vertex(765,120);
   vertex(770,110);
   vertex(787,105);
   vertex(792,95);
   vertex(805,90);
   vertex(810,80);
   vertex(815,85);
   vertex(820,95);
   vertex(830,107);
   vertex(835,112);
   vertex(835,120);
   vertex(840,130);
   vertex(860,140);
   vertex(870,155);
   vertex(890,170);
   vertex(895,170);
   vertex(900,180);
   
   
 
 
  
  
  endShape(CLOSE);
    pushMatrix();
    fill(0);
    textSize(30); 
    text("LIVING IN THE DESERT IS SUCH A BATTLE...", 150,500);
    textSize(25); 
    text("Click to Choose Player1 & Player2", 250,550);
    popMatrix();


    cactus1();

    pushMatrix();
    cactus2();
    popMatrix();

    pushMatrix();
    cactus3();
    popMatrix();

    pushMatrix();
    cactus4();
    popMatrix();

    pushMatrix();
    cactus5();
    popMatrix();

    pushMatrix();
    cactus6();
    popMatrix();
    
    

    break;
  case 2:


    background(255);
    for(int i=0; i<=450; i+=1.5)
  {
  noStroke();  
   if (i%2==0) 
   {
    fill (#674428);
    rect(i, i, 900-(i*2),900-(i*2));
   }
    else 
    fill (#2B6728);
    rect(i, i, 900-(i*2),900-(i*2));
  }
  
  for(int i=0; i<=450; i+=3)
  {
  noStroke();  
   if (i%2==0) 
   {
    fill (#F0C61D);
    rect(i, i, 900-(i*2),180-(i*2));
   }
    else 
    fill (#F0951D);
    rect(i, i,900-(i*2),180-(i*2));
  }
  
  for(int i=0; i<=900; i+=1.5)
  {
    if (i%2==0)
    {
      fill (#F79257);  
    arc(450,180,450-i,450-i, radians(180), radians(360));
    }
    else
    fill (#F0281D);
    arc(450,180,450-i,450-i, radians(180), radians(360));
  }
  fill(#836E18);
  stroke(0);
  beginShape();
   vertex(0,180);
   vertex(20,160);
   vertex(40,140);
   vertex(45,120);
   vertex(50,110);
   vertex(67,105);
   vertex(72,95);
   vertex(85,90);
   vertex(90,80);
   vertex(95,85);
   vertex(100,95);
   vertex(110,107);
   vertex(115,112);
   vertex(115,120);
   vertex(120,130);
   vertex(140,140);
   vertex(150,155);
   vertex(170,170);
   vertex(175,170);
   vertex(180,180);
   
   
 
 
  
  
  endShape(CLOSE);

fill(#836E18);
stroke(0);
  beginShape();
   vertex(720,180);
   vertex(740,160);
   vertex(760,140);
   vertex(765,120);
   vertex(770,110);
   vertex(787,105);
   vertex(792,95);
   vertex(805,90);
   vertex(810,80);
   vertex(815,85);
   vertex(820,95);
   vertex(830,107);
   vertex(835,112);
   vertex(835,120);
   vertex(840,130);
   vertex(860,140);
   vertex(870,155);
   vertex(890,170);
   vertex(895,170);
   vertex(900,180);
   
   
 
 
  
  
  endShape(CLOSE);
    fill(0);
    textSize(24);
    text("Player1: Hit1= q Hit2= w     Player2: Hit1= o Hit2= p", 140, 550);

    pushMatrix();
    fill(random(0,255),random (0,255), random (0,255));
    rect(100, 50, player1[2], 40);
    popMatrix();

    pushMatrix();
    fill(random(0,255),random (0,255), random (0,255));
    rect(600, 50, player2[2], 40);
    popMatrix();

    pushMatrix();
    

    if (player1==Cactus1)
    {
      cactus1();
    } else if (player1==Cactus2)

    {
      cactus2();
    } else if (player1==Cactus3)
    {
      cactus3();
    } else if (player1==Cactus4)
    {
      cactus4();
    } else if (player1==Cactus5)
    {
      cactus5();
    } else if (player1==Cactus6)
    {
      cactus6();
    }
    popMatrix();

    pushMatrix();
    
    if (player2==Cactus1)
    {
      cactus1();
    } else if (player2==Cactus2)
    {
      cactus2();
    } else if (player2==Cactus3)
    {
      cactus3();
    } else if (player2==Cactus4)
    {
      cactus4();
    } else if (player2==Cactus5)
    {
      cactus5();
    } else if (player2==Cactus6)
    {
      cactus6();
    }
    popMatrix();


    if (player1[2]<=0)
    {
      fill(255);
      text("YOU WIN! Press spacebar to play again.", 250, 675);
    } else if (player2[2]<=0)
    {
      fill(255);
      text("YOU WIN! Press spacebar to play again.", 250, 675);
    }
  }
}

void keyPressed()
{
  if (keyCode==DOWN)
  {
    screen=1;
  }

  if (turn==0&&screen==2)
  {
    if (key=='q'||key=='Q')
    {


      player2[2]=player2[2]-(player1[0]-player2[3]);
      println(player2[2]);
      turn=1;
    }
    if (key=='w'||key=='W')
    {

      player2[2]=player2[2]-(player1[1]-player2[3]);
      println(player2[2]);
      turn=1;
    }
  }
  if (turn==1&&screen==2)
  {
    if (key=='o'||key=='o')
    {

      player1[2]=player1[2]-(player2[0]-player1[3]);
      println(player1[2]);
      turn=0;
    } 
    if (key=='p'||key=='P')
    {

      player1[2]=player1[2]-(player2[1]-player1[3]);
      println(player2[2]);
      turn=0;
    }
  }

  if (player1[2]<=0||player2[2]<=0)
  {
    if (key==' ') {
      screen=0;
    }
  }
}

void mouseClicked()
{
  if (screen==1)
  {
    //Cactus1
    if (mouseX>0&&mouseX<250&&mouseY>0&&mouseY<250)
    {
      if (selection==0)
      {
        player1=Cactus1;
        selection=1;
      } else if (selection==1)
      {
        
        player2=Cactus1;

        screen=2;
      }
    }

    //Cactus2
    if (mouseX>250&&mouseX<550&&mouseY>0&&mouseY<250)
    {
      if (selection==0)
      {
        player1=Cactus2;
        selection=1;
      } else if (selection==1)
      {
        
        player2=Cactus2;

        screen=2;
      }
    }

    //Cactus3
    if (mouseX>550&&mouseX<800&&mouseY>0&&mouseY<250)
    {
      if (selection==0)
      {
        player1=Cactus3;
        selection=1;
      } else if (selection==1)
      {

        player2=Cactus3;

        screen=2;
      }
    }

    //Cactus4
    if (mouseX>0&&mouseX<250&&mouseY>550&&mouseY<800)
    {
      if (selection==0)
      {
        player1=Cactus4;
        selection=1;
      } else if (selection==1)
      {
       
        player2=Cactus4;
        screen=2;
      }
    }

    //Cactus5
    if (mouseX>250&&mouseX<550&&mouseY>550&&mouseY<800)
    {
      if (selection==0)
      {
        player1=Cactus5;
        selection=1;
      } else if (selection==1)
      {
        
        player2=Cactus5;
        screen=2;
      }
    }

    //Cactus6
    if (mouseX>550&&mouseX<800&&mouseY>550&&mouseY<800)
    {
      if (selection==0)
      {
        player1=Cactus6;
        selection=1;
      } else if (selection==1)
      {
        
        player2=Cactus6;
        screen=2;
      }
    }
  }
}

void semilla1(float punto, float angulo, float x, float y) {
  
  if (punto > 1.0) {
    
    
    float r = random(0, 1.0);  
    
    
    if (r > 0.02) {  
      ellipse(x, y, punto, punto);
      float nuevax = x + cos(angulo) * punto;
      float nuevay = y + sin(angulo) * punto;
      semilla1(punto * 0.99, angulo - anguloa, nuevax, nuevay);   
    }
    
    else {  
      ellipse(x, y, punto, punto);
      float nuevax = x + cos(angulo);
      float nuevay = y + sin(angulo);
      semilla2(punto * 0.99, angulo + anguloa, nuevax, nuevay);
      semilla1(punto * 0.60, angulo + angulob, nuevax, nuevay);
      semilla2(punto * 0.50, angulo - angulob, nuevax, nuevay);
    } 
  }
}


void semilla2(float punto, float angulo, float x, float y) {
  
  if (punto > 1.0) {
    
    
    float r = random(0, 1.0);
    
    
    if (r > 0.05) {
      ellipse(x, y, punto, punto);
      float nuevax = x + cos(angulo) * punto;
      float nuevay = y + sin(angulo) * punto;
      semilla2(punto * 0.99, angulo + anguloa, nuevax, nuevay);
    } 
    
    else {
      ellipse(x, y, punto, punto);
      float nuevax = x + cos(angulo);
      float nuevay = y + sin(angulo);
      semilla1(punto * 0.99, angulo + anguloa, nuevax, nuevay);  
      semilla2(punto * 0.60, angulo + angulob, nuevax, nuevay);
      semilla1(punto * 0.50, angulo - angulob, nuevax, nuevay);
    }
  }
}
